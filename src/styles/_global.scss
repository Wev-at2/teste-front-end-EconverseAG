@use 'variables';
@use 'mixins';

body {
  font-family: $font-family-base;
  font-size: $font-size-base;
  font-weight: $font-weight-base;
  line-height: $line-height-base;
  color: $dark-color;
  background-color: #fff;
}

// Container
.container {
  width: 100%;
  max-width: 90%;
  margin: 0 auto;
  padding: 3rem 1rem;
}

// Utility classes
.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.d-none {
  display: none;
}

.d-block {
  display: block;
}

.d-flex {
  display: flex;
}

.d-inline-flex {
  display: inline-flex;
}

.justify-content-center {
  justify-content: center;
}

.justify-content-between {
  justify-content: space-between;
}

.justify-content-end {
  justify-content: flex-end;
}

.align-items-center {
  align-items: center;
}

.align-items-start {
  align-items: flex-start;
}

.align-items-end {
  align-items: flex-end;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.w-100 {
  width: 100%;
}

.h-100 {
  height: 100%;
}

// Spacing utilities
@each $prop,
$abbrev in (margin: m, padding: p) {

  @each $size,
  $length in $spacers {
    .#{$abbrev}-#{$size} {
      #{$prop}: $length !important;
    }

    .#{$abbrev}t-#{$size} {
      #{$prop}-top: $length !important;
    }

    .#{$abbrev}r-#{$size} {
      #{$prop}-right: $length !important;
    }

    .#{$abbrev}b-#{$size} {
      #{$prop}-bottom: $length !important;
    }

    .#{$abbrev}l-#{$size} {
      #{$prop}-left: $length !important;
    }

    .#{$abbrev}x-#{$size} {
      #{$prop}-right: $length !important;
      #{$prop}-left: $length !important;
    }

    .#{$abbrev}y-#{$size} {
      #{$prop}-top: $length !important;
      #{$prop}-bottom: $length !important;
    }
  }
}

.btnPrimary {
  @include button-reset;
  background-color: $primary-color;
  color: $light-color;
  font-weight: 600;
  padding: 12px 24px;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}
